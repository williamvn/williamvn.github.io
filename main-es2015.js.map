{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dialog/dialog.component.ts","./src/app/dialog/dialog.component.html","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/forms/address-form/address-form.component.ts","./src/app/forms/address-form/address-form.component.html","./src/app/forms/patient-form/patient-form.component.ts","./src/app/forms/patient-form/patient-form.component.html","./src/app/forms/personal-info-form/personal-info-form.component.ts","./src/app/forms/personal-info-form/personal-info-form.component.html","./src/app/forms/professional-form/professional-form.component.ts","./src/app/forms/professional-form/professional-form.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material/material.module.ts","./src/app/model/Address.ts","./src/app/model/app-user.ts","./src/app/model/patient.ts","./src/app/model/professional.ts","./src/app/model/user.ts","./src/app/new-user/new-user.component.ts","./src/app/new-user/new-user.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/query-validator.directive.ts","./src/app/services/app-user.service.ts","./src/app/services/forms.service.ts","./src/app/services/user.service.ts","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/app/user-details/user-details.component.ts","./src/app/user-details/user-details.component.html","./src/app/users-list/users-list.component.ts","./src/app/users-list/users-list.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UserDetailsComponent } from './user-details/user-details.component';\r\nimport { NewUserComponent } from './new-user/new-user.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: LoginComponent },\r\n  { path: \"users\", component: UsersComponent },\r\n  { path: \"error\", component: ErrorComponent },\r\n  { path: \"not-found\", component: NotFoundComponent },\r\n  { path: \"user/new\", component: NewUserComponent },\r\n  { path: \"user/edit/:userType/:id\", component: UserDetailsComponent },\r\n  { path: \"user/new/:userType\", component: NewUserComponent },\r\n  { path: \"user/:userType/:id\", component: UserDetailsComponent },\r\n  { path: \"**\", component: NotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'UserManagement';\n}\n","<app-top-bar></app-top-bar>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport { UsersListComponent } from './users-list/users-list.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UserDetailsComponent } from './user-details/user-details.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { NewUserComponent } from './new-user/new-user.component';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { PersonalInfoFormComponent } from './forms/personal-info-form/personal-info-form.component';\r\nimport { AddressFormComponent } from './forms/address-form/address-form.component';\r\nimport { ProfessionalFormComponent } from './forms/professional-form/professional-form.component';\r\nimport { PatientFormComponent } from './forms/patient-form/patient-form.component';\r\nimport { QueryValidatorDirective } from './query-validator.directive';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    UsersListComponent,\r\n    UsersComponent,\r\n    UserDetailsComponent,\r\n    NewUserComponent,\r\n    DialogComponent,\r\n    PersonalInfoFormComponent,\r\n    AddressFormComponent,\r\n    ProfessionalFormComponent,\r\n    PatientFormComponent,\r\n    QueryValidatorDirective,\r\n    NotFoundComponent,\r\n    LoginComponent,\r\n    ErrorComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from './dialog-data.interface';\n\n@Component({\n  selector: 'app-dialog',\n  styleUrls: ['./dialog.component.scss'],\n  templateUrl: './dialog.component.html',\n})\nexport class DialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<any>,  @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n","<div class=\"dialog\">\n    <h1 mat-dialog-title>{{data.title}}</h1>\n    <h3 mat-dialog-title>{{data.subtitle}}</h3>\n    <div mat-dialog-content>\n        <p>{{data.body}}</p>\n    </div>\n    <div mat-dialog-actions>\n        <button mat-button class=\"basic\" (click)=\"onNoClick()\">{{data.reject}}</button>\n        <button mat-raised-button class=\"warn\" (click)=\"onClick()\">{{data.accept}}</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  redirectToHome(){\r\n    this.router.navigate([\"users\"]);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"page-body\">\r\n        <div class=\"mat-display-4\"><strong>500</strong></div>\r\n        <div class=\"mat-display-1\"> Error Interno </div>\r\n        <p> Ooops! Lo sentimos mucho, ha ocurrido un error.</p>\r\n        <img src=\"../../assets/img/internalError.jpg\" width=\"100%\">\r\n        <button mat-stroked-button (click)=\"redirectToHome()\">Ir a Home</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\n    <div class=\"options\">\n        <div> <i class=\"fa fa-globe\" aria-hidden=\"true\"></i> Español</div>\n        <div class=\"row\">\n            <mat-icon>wb_sunny</mat-icon> <div class=\"ml-1\">Tema</div>\n        </div>\n    </div>\n    <div class=\"property\">\n        <div>@William Vázquez Noguerol</div>\n        <div>GeekHubs Academy + FutuRS</div>\n        <a class=\"text-center\" mat-stroked-button href=\"mailto:williamvn1995@gmail.com\">Contact</a>\n    </div>\n</div>\n","import { Component, OnInit, Input, DoCheck } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { Observable } from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-address-form',\r\n  templateUrl: './address-form.component.html',\r\n  styleUrls: ['./address-form.component.scss' ,'../forms.component.scss'],\r\n  providers:[FormsService]\r\n})\r\nexport class AddressFormComponent implements OnInit {\r\n\r\n  @Input() isEditable: boolean = true;\r\n  @Input() addressFormGroup: FormGroup;\r\n  cities:string[] = [];\r\n  filteredOptions: Observable<string[]>;\r\n  constructor(private formService: FormsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formService.loadCities().subscribe((cities) => {\r\n      this.cities = cities;\r\n    });\r\n    this.filteredOptions = this.addressFormGroup.get(\"city\").valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this.filter(value))\r\n    );\r\n  }\r\n\r\n  private filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.cities.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  onzipCodeInput(event:KeyboardEvent):void{\r\n    this.formService.allowOnlyNumbers(event);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"addressFormGroup\" novalidate>\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput placeholder=\"Calle\" formControlName=\"street\" name=\"street\" [readonly]=\"!isEditable\">\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput placeholder=\"Puerta\" formControlName=\"door\" name=\"puerta\" [readonly]=\"!isEditable\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput placeholder=\"No\" formControlName=\"no\" name=\"no\" [readonly]=\"!isEditable\">\r\n\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput placeholder=\"Ciudad\" formControlName=\"city\" name=\"city\" [readonly]=\"!isEditable\"\r\n                    [matAutocomplete]=\"auto\">\r\n\r\n                <mat-error *ngIf=\"addressFormGroup.controls['city'].errors\">\r\n                    El nombre de la ciudad no puede contener caracteres especiales\r\n                </mat-error>\r\n                <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n                    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n                        {{option}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput #zipCode placeholder=\"Código Postal\" formControlName=\"zipCode\"\r\n                    name=\"zipcode\" [readonly]=\"!isEditable\" (keydown)=\"onzipCodeInput($event)\">\r\n                <mat-error *ngIf=\"addressFormGroup.controls['zipCode'].errors\">\r\n                    El codigo Postal debe tener <strong>5</strong> números.\r\n                </mat-error>\r\n                <mat-hint align=\"end\">{{zipCode.value.length}} / 5</mat-hint>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n</form>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\nimport { InsuranceCarrier } from '../../model/insurance-carrier';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-patient-form',\r\n  templateUrl: './patient-form.component.html',\r\n  styleUrls: ['./patient-form.component.scss','../forms.component.scss']\r\n})\r\nexport class PatientFormComponent implements OnInit {\r\n\r\n  @Input() isEditable:boolean = true;\r\n  @Input() patientForm:FormGroup;\r\n  @Input() insuranceCarriers:InsuranceCarrier[] = [];\r\n  insuranceForms: FormGroup[] = [];\r\n  insuranceFormsNames:string[] = [];\r\n  insuranceId:number = 0;\r\n  constructor(private _snackBar: MatSnackBar, private formbuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createInsuranceControls();\r\n  }\r\n\r\n  private createInsuranceControls(){\r\n    for (let i = 0; i < this.insuranceCarriers.length; i++) {\r\n      var form: FormGroup = this.formbuilder.group({\r\n        name: this.insuranceCarriers[i].name,\r\n        type: this.insuranceCarriers[i].type,\r\n        cardNumber: this.insuranceCarriers[i].cardNumber\r\n      });\r\n      this.insuranceForms.push(form);\r\n      this.patientForm.addControl(\"insurance\" + this.insuranceId, form);\r\n      this.insuranceFormsNames.push(\"insurance\" + this.insuranceId);\r\n      this.insuranceId += 1\r\n    }\r\n  }\r\n\r\n  addInsurance() {\r\n    var form: FormGroup = this.formbuilder.group({\r\n      name: \"\",\r\n      type: \"\",\r\n      cardNumber: \"\"\r\n    });\r\n    this.insuranceForms.push(form);\r\n    this.patientForm.addControl(\"insurance\" + this.insuranceId, form);\r\n    this.insuranceFormsNames.push(\"insurance\" + this.insuranceId);\r\n    this.insuranceId += 1;\r\n  }\r\n\r\n  deleteInsurance(form:FormGroup) {\r\n    var index = this.insuranceForms.findIndex( i => i === form); \r\n\r\n    this.insuranceForms.splice(index, 1);\r\n    var name = this.insuranceFormsNames[index];\r\n    this.insuranceFormsNames.splice(index, 1);\r\n\r\n    this.patientForm.removeControl(name);\r\n\r\n    var snackBarRef = this._snackBar.open(\"Seguro Eliminado\", \"UNDO\", {\r\n      duration: 5000,\r\n    });\r\n\r\n    snackBarRef.onAction().subscribe(() => {\r\n      this.insuranceForms.splice(index, 0, form);\r\n      this.insuranceFormsNames.splice(index, 0, name);\r\n      this.patientForm.addControl(name, form);\r\n    });\r\n  }\r\n}\r\n","<form [formGroup]=\"patientForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput placeholder=\"NHC\" formControlName='NHC' name=\"NHC\" [readonly]=\"!isEditable\">\r\n                <mat-error *ngIf=\"patientForm.controls['NHC'].hasError('required')\">\r\n                    Por favor introduzca el <strong>NHC</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row insurance-container row-reverse\" *ngFor=\"let form of insuranceForms;let i = index;\">\r\n        <form class=\"row insurance\" [formGroup]=\"form\">\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Nombre del Seguro\" formControlName=\"name\" [readonly]=\"!isEditable\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-select matInput placeholder=\"Tipo de Seguro\" formControlName=\"type\" [disabled]=\"!isEditable\">\r\n                    <mat-option value=\"Salud\">Salud</mat-option>\r\n                    <mat-option value=\"Familiar\">Familiar</mat-option>\r\n                    <mat-option value=\"Dental\">Dental</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Numero de Tarjeta\" formControlName=\"cardNumber\" [readonly]=\"!isEditable\">\r\n            </mat-form-field>\r\n        </form>\r\n        <button mat-mini-fab color=\"basic\" type=\"button\" class=\"close\" (click)=\"deleteInsurance(form)\"\r\n            *ngIf=\"isEditable\">\r\n            x\r\n        </button>\r\n    </div>\r\n    <button mat-mini-fab color=\"basic\" type=\"button\" (click)=\"addInsurance()\" *ngIf=\"isEditable\">\r\n        <mat-icon>add</mat-icon>\r\n    </button>\r\n</form>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-personal-info-form',\r\n  templateUrl: './personal-info-form.component.html',\r\n  styleUrls: ['./personal-info-form.component.scss','../forms.component.scss']\r\n})\r\nexport class PersonalInfoFormComponent implements OnInit {\r\n\r\n  @Input() isEditable:boolean = true;\r\n  @Input() personalInfoForm:FormGroup;\r\n  constructor() {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"personalInfoForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput placeholder=\"Nombre\" formControlName=\"name\" name=\"Name\" [readonly]=\"!isEditable\">\r\n                <mat-error *ngIf=\"personalInfoForm.controls['name'].hasError('required')\">\r\n                    El Nombre es <strong>obligatorio</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput placeholder=\"Apellido\" formControlName=\"lastName\" name=\"lastName\"\r\n                    [readonly]=\"!isEditable\">\r\n                <mat-error *ngIf=\"personalInfoForm.controls['lastName'].hasError('required')\">\r\n                    El primer apellido es <strong>obligatorio</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput placeholder=\"Segundo Apellido\" formControlName=\"secondLastName\" name=\"secondLastName\"\r\n                    [readonly]=\"!isEditable\">\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input matInput placeholder=\"DNI/Pasaporte\" formControlName=\"documentationId\" name=\"docID\"\r\n                    [readonly]=\"!isEditable\">\r\n                <mat-error *ngIf=\"personalInfoForm.controls['documentationId'].errors\">\r\n                    DNI or Pasaporte no válido\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"full-width\">\r\n                <mat-label>Fecha de Nacimiento</mat-label>\r\n                <input matInput [matDatepicker]=\"picker\" formControlName=\"birthDay\" name=\"birthDay\"\r\n                    [readonly]=\"!isEditable\">\r\n                <mat-datepicker-toggle class=\"large\" matSuffix [for]=\"picker\" [disabled]=\"!isEditable\"></mat-datepicker-toggle>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <mat-radio-group formControlName=\"gender\" name=\"gender\">\r\n                <mat-radio-button value=\"M\" color=\"primary\" [disabled]=\"!isEditable\">Masculino</mat-radio-button>\r\n                <mat-radio-button value=\"F\" [disabled]=\"!isEditable\"> Femenino</mat-radio-button>\r\n            </mat-radio-group>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-professional-form',\r\n  templateUrl: './professional-form.component.html',\r\n  styleUrls: ['./professional-form.component.scss','../forms.component.scss']\r\n})\r\nexport class ProfessionalFormComponent implements OnInit {\r\n\r\n  @Input() isEditable: boolean = true;\r\n  @Input() professionalForm: FormGroup;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<form [formGroup] = \"professionalForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"No. Colegiado\" formControlName = 'noCollegiate' name=\"noCollegiate\"\r\n              [readonly]=\"!isEditable\">\r\n              <mat-error *ngIf=\"professionalForm.controls['noCollegiate'].hasError('required')\">\r\n                Por favor instroduzca el <strong>Número de Colegiado</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-select matInput placeholder=\"Tipo\" formControlName = 'type' name=\"type\" [disabled]=\"!isEditable\">\r\n              <mat-option value=\"Enfermero\">Enfermero</mat-option>\r\n              <mat-option value=\"Médico\">Médico</mat-option>\r\n              <mat-option value=\"Administrativo\">Administrativo</mat-option>\r\n              </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { AppUser } from '../model/app-user';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppUserService } from '../services/app-user.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  errorMessage: string = \"\";\r\n  user: AppUser = new AppUser();\r\n  constructor(private router: Router, private _snackBar: MatSnackBar, private appUserService: AppUserService, private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logUser() {\r\n    this.appUserService.LogUser(this.user).subscribe(\r\n      (success) => {\r\n        if (success) {\r\n          this._snackBar.open(\"Entrada Exitosa\", \"Aceptar\", {\r\n            duration: 2000,\r\n          });\r\n          var beforeRoute = this.userService.currentRoute;\r\n          beforeRoute = beforeRoute ? beforeRoute : \"users\";\r\n          this.router.navigate([beforeRoute]);\r\n        }\r\n      },\r\n      (error) => {\r\n        if (error.status === 401) {\r\n          this.errorMessage = \"Nombre de usuario o contraseña incorrecta\";\r\n        }\r\n        else {\r\n          this.router.navigate([\"error\"]);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"login-form\">\r\n        <img src=\"../../assets/img/login.png\" class=\"img-login\">\r\n        <form #theForm=\"ngForm\" (submit)=\"logUser()\" class=\"form-group full-width\">\r\n            <mat-form-field class=\"full-width\">\r\n                <input type=\"text\" matInput placeholder=\"Nombre de Usuario\" name=\"Username\" [(ngModel)] = \"user.username\" required>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"full-width\">\r\n                <input type=\"password\" matInput placeholder=\"Contraseña\" name=\"Password\" [(ngModel)] = \"user.password\" required>\r\n            </mat-form-field>\r\n            <div *ngIf=\"errorMessage\" class=\"alert\">{{errorMessage}}</div>\r\n            <!-- <mat-slide-toggle class=\"pull-left\" color=\"primary\" [(ngModel)]=\"user.rememberMe\" name=\"rememberMe\">Recordar</mat-slide-toggle> -->\r\n            <button type=\"submit\" class=\"full-width\" mat-raised-button color=\"primary\">Entrar</button>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {CdkTableModule} from '@angular/cdk/table'; \r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n\r\n\r\n@NgModule({\r\n  exports:[\r\n    MatToolbarModule,\r\n    LayoutModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatSortModule,\r\n    CdkTableModule,\r\n    MatPaginatorModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatAutocompleteModule,\r\n    MatSnackBarModule,\r\n    MatBadgeModule,\r\n    MatDialogModule,\r\n    MatStepperModule,\r\n    MatSlideToggleModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","export class Address{\r\n    street:string;\r\n    no: number;\r\n    door: string;\r\n    zipCode:string;\r\n    city:string; \r\n}","export class AppUser{\r\n    username:string;\r\n    password:string;\r\n    rememberMe:boolean;\r\n}","import { User } from './user';\r\nimport { InsuranceCarrier } from './insurance-carrier';\r\n\r\nexport class Patient extends User {\r\n    NHC: string;\r\n    insuranceCarriers: InsuranceCarrier[];\r\n}\r\n\r\n","import { User } from './user';\r\n\r\ntype ProfessionalType = \"Médico\" | \"Enfermero\" | \"Administrativo\";\r\nexport class Professional extends User{\r\n    noCollegiate: string;\r\n    type: ProfessionalType;\r\n}","import { Address } from \"./Address\";\r\n\r\ntype gender = \"M\" | \"F\";\r\nexport class User {\r\n    _id: string;\r\n    name: string;\r\n    lastName: string;\r\n    secondLastName: string;\r\n    gender: gender;\r\n    birthDay: Date;\r\n    documentationId: string;\r\n    address: Address;\r\n}\r\n","import { Component, OnInit, OnChanges } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { User } from '../model/user';\r\nimport { Address } from '../model/Address';\r\nimport { Professional } from '../model/professional';\r\nimport { Patient } from '../model/patient';\r\nimport { UserService, Resource } from '../services/user.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormsService } from '../services/forms.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-user',\r\n  templateUrl: './new-user.component.html',\r\n  styleUrls: ['./new-user.component.scss'],\r\n  providers: [FormsService]\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n\r\n  personalInfoForm: FormGroup;\r\n  addressForm: FormGroup;\r\n  patientForm: FormGroup;\r\n  professionalForm: FormGroup;\r\n\r\n  type: string;\r\n  isTypeSelected: boolean = false;\r\n  user: User;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private userService: UserService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    public formService: FormsService,\r\n    private breakpointObserver: BreakpointObserver) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.currentRoute = this.router.url;\r\n    if (this.userService.loginRequired) {\r\n      this.router.navigate([\"\"]);\r\n    }\r\n    else {\r\n      this.route.paramMap.subscribe(params => {\r\n        var userType = params.get('userType');\r\n        var addr = new Address();\r\n        if (!userType) {\r\n          this.isTypeSelected = false;\r\n        }\r\n        else if (userType === \"professional\") {\r\n          this.formService.isProfessional = true;\r\n          this.isTypeSelected = true;\r\n          this.type = \"Profesional\";\r\n          this.user = new Professional();\r\n          this.user.address = addr;\r\n          this.formService.user = this.user;\r\n          this.formService.createProfessionalForm();\r\n        }\r\n        else if (userType === \"patient\") {\r\n          this.formService.isProfessional = false;\r\n          this.isTypeSelected = true;\r\n          this.type = \"Paciente\";\r\n          this.user = new Patient();\r\n          this.user['insuranceCarriers'] = [];\r\n          this.user.address = addr;\r\n          this.formService.user = this.user;\r\n          this.formService.createPatientForm();\r\n        }\r\n        else {\r\n          this.router.navigate([\"not-found\"]);\r\n          return;\r\n        }\r\n        this.loadForms()\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadForms() {\r\n    this.personalInfoForm = this.formService.personalInfoForm;\r\n    this.addressForm = this.formService.addressForm;\r\n    this.patientForm = this.formService.patientForm;\r\n    this.professionalForm = this.formService.professionalForm;\r\n  }\r\n\r\n  saveUser() {\r\n    this.formService.getUser();\r\n    this.userService.addNewUser(this.user, this.formService.isProfessional ? \"professionals\" : \"patients\").subscribe(\r\n      (success) => {\r\n        this._snackBar.open(\"Usuario Agregado\", \"Aceptar\", {\r\n          duration: 2000,\r\n        });\r\n        this.router.navigate([\"users\"]);\r\n      },\r\n      (error) => {\r\n        if (error.status == 401) {\r\n          //Unauthorized\r\n          this.router.navigate([\"\"]);\r\n        }\r\n        else {\r\n          this.router.navigate([\"error\"]);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div *ngIf=\"isTypeSelected\">\r\n    <div *ngIf=\"!(isHandset$|async)\">\r\n        <mat-horizontal-stepper #stepper [linear]=\"true\">\r\n            <mat-step [stepControl]=\"personalInfoForm\">\r\n                <ng-template matStepLabel>Datos Personales</ng-template>\r\n                <app-personal-info-form [personalInfoForm]=\"personalInfoForm\">\r\n                </app-personal-info-form>\r\n                <div>\r\n                    <button mat-raised-button color=\"primary\" matStepperNext>Siguiente</button>\r\n                </div>\r\n            </mat-step>\r\n            <mat-step [stepControl]=\"addressForm\">\r\n                <ng-template matStepLabel>Dirección</ng-template>\r\n                <app-address-form [addressFormGroup]=\"addressForm\"></app-address-form>\r\n                <div>\r\n                    <button mat-raised-button class=\"m-1\" matStepperPrevious>Atrás</button>\r\n                    <button mat-raised-button color=\"primary\" matStepperNext>Siguiente</button>\r\n                </div>\r\n            </mat-step>\r\n\r\n            <mat-step *ngIf=\"!this.formService.isProfessional\" [stepControl]=\"patientForm\">\r\n                <ng-template matStepLabel>{{type}}</ng-template>\r\n                <app-patient-form [patientForm]=\"patientForm\" [insuranceCarriers]=\"user['insuranceCarriers']\">\r\n                </app-patient-form>\r\n                <div>\r\n                    <button mat-raised-button class=\"m-1\" matStepperPrevious>Atrás</button>\r\n                    <button mat-raised-button color=\"primary\" matStepperNext>Siguiente</button>\r\n                </div>\r\n            </mat-step>\r\n\r\n            <mat-step *ngIf=\"this.formService.isProfessional\" [stepControl]=\"professionalForm\">\r\n                <ng-template matStepLabel>{{type}}</ng-template>\r\n                <app-professional-form [professionalForm]=\"professionalForm\">\r\n                </app-professional-form>\r\n                <div>\r\n                    <button mat-raised-button class=\"m-1\" matStepperPrevious>Atrás</button>\r\n                    <button mat-raised-button color=\"primary\" matStepperNext>Siguiente</button>\r\n                </div>\r\n            </mat-step>\r\n            <mat-step>\r\n                <ng-template matStepLabel>Fin</ng-template>\r\n                <p>Ya has terminado. Presiona en Finalizar para completar la acción.</p>\r\n                <div>\r\n                    <button mat-raised-button class=\"m-1\" matStepperPrevious>Atrás</button>\r\n                    <button mat-raised-button class=\"m-1\" color=\"primary\" (click)=\"saveUser()\"\r\n                        type=\"submit\">Finalizar</button>\r\n                </div>\r\n            </mat-step>\r\n        </mat-horizontal-stepper>\r\n    </div>\r\n\r\n    <div *ngIf=\"(isHandset$|async)\">\r\n        <mat-vertical-stepper #stepper [linear]=\"true\">\r\n            <mat-step [stepControl]=\"personalInfoForm\">\r\n                <ng-template matStepLabel>Datos Personales</ng-template>\r\n                <app-personal-info-form [personalInfoForm]=\"personalInfoForm\">\r\n                </app-personal-info-form>\r\n                <div>\r\n                    <button mat-raised-button color=\"primary\" matStepperNext>Siguiente</button>\r\n                </div>\r\n            </mat-step>\r\n            <mat-step [stepControl]=\"addressForm\">\r\n                <ng-template matStepLabel>Dirección</ng-template>\r\n                <app-address-form [addressFormGroup]=\"addressForm\"></app-address-form>\r\n                <div>\r\n                    <button mat-raised-button class=\"m-1\" matStepperPrevious>Atrás</button>\r\n                    <button mat-raised-button color=\"primary\" matStepperNext>Siguiente</button>\r\n                </div>\r\n            </mat-step>\r\n\r\n            <mat-step *ngIf=\"!this.formService.isProfessional\" [stepControl]=\"patientForm\">\r\n                <ng-template matStepLabel>{{type}}</ng-template>\r\n                <app-patient-form [patientForm]=\"patientForm\" [insuranceCarriers]=\"user['insuranceCarriers']\">\r\n                </app-patient-form>\r\n                <div>\r\n                    <button mat-raised-button class=\"m-1\" matStepperPrevious>Atrás</button>\r\n                    <button mat-raised-button color=\"primary\" matStepperNext>Siguiente</button>\r\n                </div>\r\n            </mat-step>\r\n\r\n            <mat-step *ngIf=\"this.formService.isProfessional\" [stepControl]=\"professionalForm\">\r\n                <ng-template matStepLabel>{{type}}</ng-template>\r\n                <app-professional-form [professionalForm]=\"professionalForm\">\r\n                </app-professional-form>\r\n                <div>\r\n                    <button mat-raised-button class=\"m-1\" matStepperPrevious>Atrás</button>\r\n                    <button mat-raised-button color=\"primary\" matStepperNext>Siguiente</button>\r\n                </div>\r\n            </mat-step>\r\n            <mat-step>\r\n                <ng-template matStepLabel>Fin</ng-template>\r\n                <p>Ya has terminado. Presiona en Finalizar para completar la acción.</p>\r\n                <div>\r\n                    <button mat-raised-button class=\"m-1\" matStepperPrevious>Atrás</button>\r\n                    <button mat-raised-button class=\"m-1\" color=\"primary\" (click)=\"saveUser()\"\r\n                        type=\"submit\">Finalizar</button>\r\n                </div>\r\n            </mat-step>\r\n        </mat-vertical-stepper>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!isTypeSelected\">\r\n    <div class=\"center\">\r\n        <h2 class=\"title\"><img src=\"../../assets/img/login.png\" width=\"30%\" *ngIf=\"isHandset$|async\">Seleccione el tipo de usuario que desea crear</h2>\r\n    </div>\r\n    <div class=\"type\">\r\n        <div class=\"service\" routerLink=\"/user/new/professional\">\r\n            <mat-icon class=\"icon-holder lg-icon\">local_hospital</mat-icon>\r\n            <h4 class=\"heading\">Profesional</h4>\r\n            <h1 class=\"description\">\r\n                <img src=\"../../assets/img/doctor.jpg\" width=\"40%\">\r\n            </h1>\r\n        </div>\r\n\r\n        <div class=\"service\" routerLink=\"/user/new/patient\">\r\n            <div class=\"icon-holder\">\r\n                <h1> <i class=\"fa fa-heartbeat lg-icon\"></i> </h1>\r\n            </div>\r\n            <h4 class=\"heading\">Paciente</h4>\r\n            <h1 class=\"description\">\r\n                <img src=\"../../assets/img/patient2.png\" width=\"40%\">\r\n            </h1>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  redirectToHome(){\r\n    this.router.navigate([\"users\"]);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"page-body\">\r\n        <div class=\"mat-display-4\"><strong>404</strong></div>\r\n        <div class=\"mat-display-1\"> Página no encontrada </div>\r\n        <p> Ooops! Esta no es la página que buscas</p>\r\n        <img src=\"../../assets/img/not-found2.png\" width=\"100%\">\r\n        <button mat-stroked-button (click)=\"redirectToHome()\">Ir a Home</button>\r\n    </div>\r\n</div>","import { Directive } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, FormControl, ValidationErrors, Validators, AbstractControl } from '@angular/forms';\r\n\r\n\r\n  const FILTERS: string[] = [\r\n    \"name\",\r\n    \"lastName\",\r\n    \"secondLastName\",\r\n    \"noCollegiate\",\r\n    \"documentationId\",\r\n    \"type\",\r\n    \"NHC\",\r\n    \"gender\"\r\n  ];\r\n\r\n@Directive({\r\n  selector: '[QueryValidator]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: QueryValidatorDirective, multi: true }]\r\n})\r\nexport class QueryValidatorDirective implements Validator {\r\n  constructor() {\r\n  }\r\n  validate(control: AbstractControl): ValidationErrors {\r\n    let result: boolean = true;\r\n    let query: string = control.value;\r\n    if(!query){\r\n      return null;\r\n    }\r\n    let filters = query.split(\"&\");\r\n    for (let i = 0; i < filters.length; i++) {\r\n      let field: string = filters[i].split(\"=\")[0];\r\n      if (field == \"insuranceCarriers\" || filters[i] == \"address\") {\r\n        result = false;\r\n        break;\r\n      }\r\n      if (!FILTERS.find(s => s == field)) {\r\n        result = false;\r\n        break;\r\n      }\r\n    }\r\n    const message = {\r\n      'InvalidQuery': {\r\n        'message': 'Invalid Query'\r\n      }\r\n    }\r\n    return result ? null: message;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppUser } from '../model/app-user';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TokenResponse } from '../DTO/token-response';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppUserService {\r\n    BASE_URI = \"https://his-rest-api.herokuapp.com/auth/login\";\r\n\r\n    private _tokenSubject = new BehaviorSubject<string>(\"\");\r\n    private _token: Observable<string> = this._tokenSubject.asObservable();\r\n\r\n    get token() {\r\n        return this._token;\r\n    }\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    /**\r\n     * Log the User and Get Token for Auth\r\n     */\r\n    public LogUser(appUser: AppUser): Observable<boolean> {\r\n        return this.http.post<TokenResponse>(this.BASE_URI, appUser)\r\n            .pipe(\r\n                map((response: TokenResponse) => {\r\n                    this._tokenSubject.next(response.access_token);\r\n                    return true;\r\n                }));\r\n    }\r\n}\r\n","import { FormBuilder, FormGroup, Validators, FormControl, ValidatorFn } from '@angular/forms';\r\nimport { User } from '../model/user';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FormsService {\r\n\r\n  //Forms\r\n  personalInfoForm: FormGroup;\r\n  addressForm: FormGroup;\r\n  patientForm: FormGroup;\r\n  professionalForm: FormGroup;\r\n  user: User;\r\n\r\n  //flags\r\n  isProfessional: boolean = true;\r\n  isEditable: boolean = true;\r\n\r\n  constructor(private formbuilder: FormBuilder, private http: HttpClient) { }\r\n\r\n  //Form Builder Functions\r\n\r\n  public createProfessionalForm(): void {\r\n    this.createUserForm();\r\n    this.createAddressForm();\r\n    this.professionalForm = this.formbuilder.group({\r\n      noCollegiate: [this.user['noCollegiate'], Validators.required],\r\n      type: [this.user['type']]\r\n    });\r\n\r\n  }\r\n\r\n  public createPatientForm(): void {\r\n    this.createUserForm();\r\n\r\n    this.createAddressForm();\r\n\r\n    this.patientForm = this.formbuilder.group({\r\n      NHC: [this.user['NHC'], Validators.required]\r\n    });\r\n  }\r\n\r\n  private createUserForm(): void {\r\n    this.personalInfoForm = this.formbuilder.group({\r\n      name: [this.user.name, Validators.required],\r\n      lastName: [this.user.lastName, Validators.required],\r\n      secondLastName: [this.user.secondLastName],\r\n      documentationId: [this.user.documentationId, this.docValidation],\r\n      birthDay: [this.user.birthDay],\r\n      gender: [this.user.gender]\r\n    });\r\n  }\r\n\r\n  private createAddressForm(): void {\r\n    this.addressForm = this.formbuilder.group({\r\n      street: [this.user.address.street],\r\n      door: [this.user.address.door],\r\n      no: [this.user.address.no],\r\n      city: [this.user.address.city, this.noSpecialChars],\r\n      zipCode: [this.user.address.zipCode, Validators.pattern(/^[0-9]{5,5}$/)]\r\n    })\r\n  }\r\n\r\n  /**\r\n   * This function load the cities availables for suggestion in the form\r\n   */\r\n  public loadCities(): Observable<string[]> {\r\n    return this.http.get(\"../../assets/cities.json\").pipe(map((res) => {\r\n      return res[\"cities\"];\r\n    }));\r\n  }\r\n \r\n  //Get Info from Reactive Forms\r\n\r\n  public getUser(): void {\r\n    this.mapFormToUser(this.personalInfoForm);\r\n    this.mapFormToUser(this.addressForm, \"address\");\r\n    if (this.isProfessional) {\r\n      this.mapFormToUser(this.professionalForm);\r\n    }\r\n    else {\r\n      this.getInsuranceCarriers();\r\n    }\r\n  }\r\n\r\n  private getInsuranceCarriers() {\r\n    var insurancesKeys: string[] = Object.keys(this.patientForm.getRawValue());\r\n    this.user['insuranceCarriers'] = [];\r\n    insurancesKeys.forEach((key) => {\r\n      if (key == \"NHC\") {\r\n        this.user['NHC'] = this.patientForm.value['NHC'];\r\n      }\r\n      else {\r\n        this.user['insuranceCarriers'].push(this.patientForm.value[key]);\r\n      }\r\n    });\r\n  }\r\n\r\n  private mapFormToUser(form: FormGroup, property: string = \"\"): void {\r\n    if (!property) {\r\n      this.user = Object.assign(this.user, form.getRawValue());\r\n    }\r\n    else {\r\n      this.user[property] = form.getRawValue();\r\n    }\r\n  }\r\n\r\n  //Validators\r\n\r\n  public docValidation(c: FormControl) {\r\n    let PASSPORT = new RegExp(/^[a-z A-Z]{3}[0-9]{6}[a-z]?$/);\r\n    let DNI = new RegExp(/^[0-9]{8}[TRWAGMYFPDXBNJZSQVHLCKE]$/);\r\n    let NIE = new RegExp(/^[XYZ][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/);\r\n\r\n    let result = PASSPORT.test(c.value);\r\n    result = result || !c.value;\r\n    result = result || DNI.test(c.value);\r\n    result = result || NIE.test(c.value);\r\n    return result ? null : {\r\n      validate: {\r\n        valid: false\r\n      }\r\n    };\r\n  }\r\n\r\n  public noSpecialChars(c: FormControl) {\r\n    let REGEXP = new RegExp(/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/);\r\n\r\n    return REGEXP.test(c.value) ? {\r\n      validate: {\r\n        valid: true\r\n      }\r\n    }:null;\r\n  }\r\n\r\n  public allowOnlyNumbers(event: KeyboardEvent): void {\r\n    if ((event.keyCode < 48 || event.keyCode > 57) && event.keyCode !== 9 && event.keyCode !== 8) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from \"@angular/common/http\";\r\nimport { User } from '../model/user';\r\nimport { Professional } from '../model/professional';\r\nimport { Patient } from '../model/patient';\r\nimport { Observable } from 'rxjs';\r\nimport { forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppUserService } from './app-user.service';\r\n\r\n\r\nexport type Resource = \"professionals\" | \"patients\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private BASE_URI = \"https://his-rest-api.herokuapp.com/\";\r\n  private TOKEN = \"\";\r\n\r\n  private _professionals: Professional[] = [];\r\n  private _patients: Patient[] = [];\r\n\r\n  get professionals() {\r\n    return this._professionals;\r\n  }\r\n\r\n  get patients() {\r\n    return this._patients;\r\n  }\r\n\r\n  get loginRequired() {\r\n    return !this.TOKEN;\r\n  }\r\n\r\n  currentRoute: string = \"\";\r\n\r\n  constructor(private http: HttpClient, private appUserService: AppUserService) {\r\n    appUserService.token.subscribe((token) => {\r\n      this.TOKEN = token;\r\n    });\r\n  }\r\n\r\n  public loadUsers(): Observable<boolean> {\r\n    return forkJoin(this.loadPatients(), this.loadProfessionals()).pipe(\r\n      map((response: [Patient[], Professional[]]) => {\r\n        this._patients = response[0];\r\n        this._professionals = response[1];\r\n        return true;\r\n      }\r\n      ));\r\n  }\r\n\r\n  private loadProfessionals(): Observable<Professional[]> {\r\n    const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.TOKEN}`);\r\n    return this.http.get<Professional[]>(this.BASE_URI + \"professionals\", { headers });\r\n  }\r\n\r\n  private loadPatients(): Observable<Patient[]> {\r\n    const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.TOKEN}`);\r\n    return this.http.get<Patient[]>(this.BASE_URI + \"patients\", { headers });\r\n  }\r\n\r\n  public getUserById(id: string, resource: Resource): Observable<User> {\r\n    const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.TOKEN}`);\r\n    return this.http.get<User>(this.BASE_URI + resource + \"/\" + id, {headers});\r\n  }\r\n\r\n  public updateUser(user: User, resource: Resource): Observable<User> {\r\n    const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.TOKEN}`);\r\n    return this.http.put<User>(this.BASE_URI + resource + \"/\" + user._id, user, { headers });\r\n  }\r\n\r\n  public deleteUser(id: string, resource: Resource) {\r\n    const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.TOKEN}`);\r\n    return this.http.delete(this.BASE_URI + resource + \"/\" + id, { headers });\r\n  }\r\n\r\n  public addNewUser(user, resource: Resource): Observable<User> {\r\n    const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.TOKEN}`);\r\n    return this.http.post<User>(this.BASE_URI + resource, user, { headers });\r\n  }\r\n\r\n  public deleteAllDoctors() {\r\n    return forkJoin(this._professionals.filter(pro => pro.type == \"Médico\").map(pro => this.deleteUser(pro._id, \"professionals\")));\r\n  }\r\n\r\n  public sendQuery(query: string): Observable<boolean> {\r\n    return forkJoin(this.sendProfessionalQuery(query), this.sendPatientQuery(query)).pipe(\r\n      map((response: [Professional[], Patient[]]) => {\r\n        this._professionals = response[0];\r\n        this._patients = response[1];\r\n        return true;\r\n      }));\r\n  }\r\n\r\n  private sendProfessionalQuery(query: string): Observable<Professional[]> {\r\n    const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.TOKEN}`);\r\n    return this.http.get<Professional[]>(this.BASE_URI + \"professionals?\" + query, { headers });\r\n  }\r\n\r\n  private sendPatientQuery(query: string): Observable<Patient[]> {\r\n    const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.TOKEN}`);\r\n    return this.http.get<Patient[]>(this.BASE_URI + \"patients?\" + query, { headers });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'over'\">\r\n    <mat-toolbar>Menu</mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-list-item routerLink=\"/users\">\r\n        <mat-icon>account_circle</mat-icon> Usuarios\r\n      </a>\r\n      <!-- <mat-slide-toggle class=\"ml-1\" color=\"primary\" name=\"DarkTheme\">Tema Oscuro</mat-slide-toggle> -->\r\n      <a mat-list-item routerLink=\"/user/new\">\r\n        <mat-icon>add</mat-icon> Nuevo Usuario\r\n      </a>\r\n      <a mat-list-item routerLink=\"\">\r\n        <mat-icon>clear</mat-icon> Salir\r\n      </a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\" class=\"navbar\">\r\n      <div class=\"nav-title\">\r\n        <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\r\n          *ngIf=\"isHandset$ | async\">\r\n          <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n        </button>\r\n        <span>HIS</span>\r\n      </div>\r\n      <div class=\"nav-list\" *ngIf=\"(isHandset$|async) === false\">\r\n        <button (click)=\"drawer.toggle()\" mat-icon-button class=\"example-icon\"\r\n          aria-label=\"Example icon-button with menu icon\">\r\n          <mat-icon>menu</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-toolbar>\r\n    <div class=\"full-page\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <app-footer></app-footer>\r\n\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>","import { Component, OnInit, DoCheck } from '@angular/core';\r\nimport { User } from '../model/user';\r\nimport { UserService, Resource } from '../services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { FormsService } from '../services/forms.service';\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.scss'],\r\n  providers: [FormsService]\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  personalInfoForm: FormGroup;\r\n  addressForm: FormGroup;\r\n  patientForm: FormGroup;\r\n  professionalForm: FormGroup;\r\n  userForm: FormGroup;\r\n\r\n  loading: boolean = true;\r\n  type: string;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private _snackBar: MatSnackBar,\r\n    public formService: FormsService,\r\n    private formbuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.currentRoute = this.router.url;\r\n    if (this.userService.loginRequired) {\r\n      this.router.navigate([\"\"]);\r\n    }\r\n    else {\r\n      this.loading = true;\r\n      this.route.url.subscribe((segments) => {\r\n        this.formService.isEditable = (segments.find(s => s.path == \"edit\") !== undefined);\r\n      });\r\n\r\n      this.route.paramMap.subscribe(params => {\r\n        var userType = params.get('userType');\r\n        var id: string = params.get('id');\r\n        if (id == undefined) {\r\n          this.router.navigate([\"not-found\"]);\r\n        }\r\n        else {\r\n          this.loadUser(id, userType);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadUser(id: string, userType: string): void {\r\n    if (userType == \"professional\") {\r\n      this.user = this.userService.professionals.find(pro => pro._id == id);\r\n      this.formService.isProfessional = true;\r\n      this.type = \"Profesional\";\r\n      if (!this.user) {\r\n        //No Cache\r\n        this.getUserbyId(id);\r\n      }\r\n      else {\r\n        this.formService.user = this.user;\r\n        this.formService.createProfessionalForm();\r\n        this.loadForms();\r\n      }\r\n    }\r\n    else if (userType == \"patient\") {\r\n      this.user = this.userService.patients.find(patient => patient._id == id);\r\n      this.formService.isProfessional = false;\r\n      this.type = \"Paciente\";\r\n      if (!this.user) {\r\n        //No Cache\r\n        this.getUserbyId(id);\r\n      }\r\n      else {\r\n        this.formService.user = this.user;\r\n        this.formService.createPatientForm();\r\n        this.loadForms();\r\n      }\r\n    }\r\n    else {\r\n      this.router.navigate([\"not-found\"]);\r\n    }\r\n  }\r\n\r\n  private getUserbyId(id: string) {\r\n    var resource: Resource = this.formService.isProfessional ? \"professionals\" : \"patients\";\r\n    this.userService.getUserById(id, resource).subscribe(\r\n      response => {\r\n        this.user = response;\r\n        this.formService.user = this.user;\r\n        if (this.formService.isProfessional) {\r\n          this.formService.createProfessionalForm();\r\n        }\r\n        else {\r\n          this.formService.createPatientForm();\r\n        }\r\n        this.loadForms();\r\n      },\r\n      error => {\r\n        if (error.status === 400) {\r\n          this.router.navigate([\"not-found\"]);\r\n        }\r\n        else {\r\n          this.router.navigate([\"error\"]);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadForms() {\r\n    this.loading = false;\r\n    this.personalInfoForm = this.formService.personalInfoForm;\r\n    this.addressForm = this.formService.addressForm;\r\n    this.patientForm = this.formService.patientForm;\r\n    this.professionalForm = this.formService.professionalForm;\r\n    this.userForm = this.formbuilder.group({\r\n      personalInfo: [this.personalInfoForm],\r\n      addressForm: [this.addressForm],\r\n      professionalForm: [this.professionalForm]\r\n    });\r\n  }\r\n\r\n  saveUser() {\r\n    this.formService.getUser();\r\n    var resource: Resource = this.formService.isProfessional ? \"professionals\" : \"patients\";\r\n    this.userService.updateUser(this.user, resource).subscribe(\r\n      response => {\r\n        this.router.navigate([\"users\"]);\r\n        this._snackBar.open(\"Usuario Actualizado\", \"Aceptar\", {\r\n          duration: 2000,\r\n        });\r\n      },\r\n      (error) => {\r\n        if (error.status == 401) {\r\n          //Unauthorized\r\n          this.router.navigate([\"\"]);\r\n        }\r\n        else{\r\n          this.router.navigate([\"error\"]);\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"full-page\">\r\n  <div class=\"container\" *ngIf=\"!loading\">\r\n    <form [formGroup]=\"userForm\" novalidate (submit)=\"saveUser()\">\r\n      <mat-tab-group>\r\n        <mat-tab label=\"Datos Personales\">\r\n          <mat-card class=\"shipping-card\">\r\n            <mat-card-header>\r\n              <mat-card-title>Detalles</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <app-personal-info-form [isEditable]=\"formService.isEditable\" [personalInfoForm]=\"personalInfoForm\">\r\n              </app-personal-info-form>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n              <button mat-raised-button color=\"primary\" type=\"submit\" *ngIf=\"formService.isEditable\"\r\n                [disabled]=\"personalInfoForm.invalid || addressForm.invalid || patientForm?.invalid || professionalForm?.invalid\">Guardar</button>\r\n              <button mat-stroked-button color=\"warn\" routerLink=\"/users\"\r\n                *ngIf=\"formService.isEditable\">Cancelar</button>\r\n\r\n            </mat-card-actions>\r\n          </mat-card>\r\n        </mat-tab>\r\n        <mat-tab label=\"Dirección\">\r\n          <mat-card class=\"shipping-card\">\r\n            <mat-card-header class=\"mt-5\">\r\n              <mat-card-title>Dirección</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <app-address-form [isEditable]=\"formService.isEditable\" [addressFormGroup]=\"addressForm\">\r\n              </app-address-form>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n              <button mat-raised-button color=\"primary\" type=\"submit\" *ngIf=\"formService.isEditable\"\r\n                [disabled]=\"personalInfoForm.invalid || addressForm.invalid || patientForm?.invalid || professionalForm?.invalid\">Guardar</button>\r\n              <button mat-stroked-button color=\"warn\" routerLink=\"/users\"\r\n                *ngIf=\"formService.isEditable\">Cancelar</button>\r\n            </mat-card-actions>\r\n          </mat-card>\r\n        </mat-tab>\r\n        <mat-tab label={{type}}>\r\n          <mat-card class=\"shipping-card\">\r\n            <mat-card-header>\r\n              <mat-card-title>Información del {{type}}</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <app-professional-form *ngIf=\"formService.isProfessional\" [isEditable]=\"formService.isEditable\"\r\n                [professionalForm]=\"professionalForm\"></app-professional-form>\r\n              <app-patient-form *ngIf=\"!formService.isProfessional\" [isEditable]=\"formService.isEditable\"\r\n                [patientForm]=\"patientForm\" [insuranceCarriers]=\"user['insuranceCarriers']\"></app-patient-form>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n              <button mat-raised-button color=\"primary\" type=\"submit\" *ngIf=\"formService.isEditable\"\r\n                [disabled]=\"personalInfoForm.invalid || addressForm.invalid || patientForm?.invalid || professionalForm?.invalid\">Guardar</button>\r\n              <button mat-stroked-button color=\"warn\" routerLink=\"/users\"\r\n                *ngIf=\"formService.isEditable\">Cancelar</button>\r\n\r\n            </mat-card-actions>\r\n          </mat-card>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"center\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild, Input, OnChanges, SimpleChanges, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { User } from '../model/user';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Professional } from '../model/professional';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UserService, Resource } from '../services/user.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DialogComponent } from '../dialog/dialog.component';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrls: ['./users-list.component.scss']\r\n})\r\nexport class UsersListComponent implements OnInit, OnChanges {\r\n\r\n  @Input() displayedColumns: string[];\r\n  @Input() columnsNames: string[];\r\n  @Input() users: User[] = [];\r\n  @Output() reload = new EventEmitter<any>();\r\n  dataSource = new MatTableDataSource(this.users);\r\n\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  constructor(public dialog: MatDialog, private userService: UserService, private _snackBar: MatSnackBar, private router: Router) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.users !== undefined) {\r\n      this.dataSource = new MatTableDataSource(this.users);\r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  deleteUser(user: User) {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      width: '350px',\r\n      data: { title: \"Eliminar\", subtitle: \"Estás intentando borrar un usuario.\", body: \"¿Estás seguro?\", reject: \"No\", accept: \"Sí\" }\r\n    });\r\n    var isProfessional = (<Professional>user).noCollegiate != undefined;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        var resource: Resource = isProfessional ? \"professionals\" : \"patients\";\r\n        this.userService.deleteUser(user._id, resource).subscribe(\r\n          () => {\r\n            this._snackBar.open(\"Usuario Eliminado\", \"Aceptar\", {\r\n              duration: 5000,\r\n            });\r\n            this.reload.emit();\r\n          },\r\n          (error) => { \r\n            if(error.status==401){\r\n              //Unauthorized\r\n              this.router.navigate[(\"\")];\r\n            }\r\n            else{\r\n              this.router.navigate[(\"error\")];\r\n            }\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","<div class=\"container\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n        <ng-container *ngFor=\"let column of displayedColumns;let i = index;\" matColumnDef={{column}}>\n            <div *ngIf=\"column != 'action'\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columnsNames[i]}} </th>\n                <td mat-cell *matCellDef=\"let element\" routerLink=\"/user/{{element['noCollegiate'] != undefined?'professional':'patient'}}/{{element._id}}\"> {{element[column]}} </td>\n            </div>\n            <div *ngIf=\"column == 'action'\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columnsNames[i]}} </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-mini-fab color=\"primary\" routerLink=\"/user/edit/{{element['noCollegiate'] != undefined?'professional':'patient'}}/{{element._id}}\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n\n                    <button mat-mini-fab color=\"warn\" (click)=\"deleteUser(element)\">\n                        <mat-icon>delete</mat-icon>\n                    </button>\n\n                </td>\n            </div>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons class=\"box-shadow\"></mat-paginator>\n   \n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { User } from '../model/user';\r\nimport { Professional } from '../model/professional';\r\nimport { Patient } from '../model/patient';\r\nimport { DialogComponent } from '../dialog/dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users: User[];\r\n  professionals: Professional[];\r\n  patients: Patient[];\r\n  query: string = \"\";\r\n\r\n  private _professionalsBackup: Professional[];\r\n  private _patientsBackup: Patient[];\r\n  advancedQuery: boolean;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private userService: UserService,\r\n    public dialog: MatDialog,\r\n    private _snackBar: MatSnackBar,\r\n    private breakpointObserver: BreakpointObserver,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.currentRoute = this.router.url;\r\n    if (this.userService.loginRequired) {\r\n      this.router.navigate([\"\"]);\r\n    }\r\n    else {\r\n      this.loadUsers();\r\n    }\r\n  }\r\n\r\n  loadUsers(): void {\r\n    this.userService.loadUsers().subscribe(\r\n      success => {\r\n        if (success) {\r\n          this.loadCollections();\r\n        }\r\n        else {\r\n          alert(\"Error Loading the Users\");\r\n        }\r\n      },\r\n      (error) => {\r\n        if (error.status == 401) {\r\n          //Unauthorized\r\n          this.router.navigate([\"\"]);\r\n        }\r\n        else {\r\n          this._snackBar.open(\"La conexión con la base de datos ha fallado\", \"Cerrar\", {\r\n            duration: 5000,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteDoctors() {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      width: '350px',\r\n      data: { title: \"Eliminar Médicos\", subtitle: \"Esta operación eliminará a todos los médicos\", body: \"¿Estás seguro?\", reject: \"No\", accept: \"Sí\" }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.userService.deleteAllDoctors().subscribe(\r\n          (res) => {\r\n            this._snackBar.open(\"Todos los médicos han sido borrados\", \"Cerrar\", {\r\n              duration: 5000,\r\n            });\r\n            this.loadUsers();\r\n          },\r\n          (error) => {\r\n            if (error.status) {\r\n              this.router.navigate([\"\"]);\r\n            }\r\n            else {\r\n              this.router.navigate([\"error\"]);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  sendQuery() {\r\n    this.userService.sendQuery(this.query).subscribe(\r\n      (success) => {\r\n        if (success) {\r\n          this.loadCollections();\r\n        }\r\n      },\r\n      (error) => {\r\n        if (error.status == 401) {\r\n          //Unauthorized\r\n          this.router.navigate([\"\"]);\r\n        }\r\n        else {\r\n          this.router.navigate([\"error\"]);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  filterUsers() {\r\n    if (!this.query) {\r\n      this.loadCollections();\r\n    }\r\n    this.professionals = this._professionalsBackup.filter(professional => professional.name.includes(this.query));\r\n    this.patients = this._patientsBackup.filter(patient => patient.name.includes(this.query));\r\n    this.users = this.professionals;\r\n    this.users = this.users.concat(this.patients);\r\n  }\r\n\r\n  resetQuery(): void {\r\n    if (!this.query) {\r\n      this.loadUsers();\r\n    }\r\n  }\r\n\r\n  private loadCollections(): void {\r\n    this.professionals = this.userService.professionals;\r\n    this.patients = this.userService.patients;\r\n    this.users = this.professionals;\r\n    this.users = this.users.concat(this.patients);\r\n    //Backup\r\n    this._professionalsBackup = this.professionals;\r\n    this._patientsBackup = this.patients;\r\n  }\r\n}\r\n","<div class=\"search-bar\">\r\n    <div class=\"container\" *ngIf=\"advancedQuery\">\r\n        <form (submit)=\"sendQuery()\" class=\"row\" #form=\"ngForm\">\r\n            <mat-form-field class=\"full-width\">\r\n                <mat-label>Buscar</mat-label>\r\n                <input matInput placeholder=\"Ejemplo: name=William&lastName=Shackespare&id=3...\" name=\"Buscar\"\r\n                    [(ngModel)]=\"query\" #searchquery=\"ngModel\" (keyup)=\"resetQuery()\" QueryValidator>\r\n                <mat-error *ngIf=\"searchquery.invalid\">\r\n                    El formato de búsqueda es incorrecto. <a class=\"error-link\"\r\n                        href=\"https://github.com/williamvn/UserManagement/blob/master/README.md\">Vea Documentación</a>,\r\n                    para mas informcación.\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <button mat-mini-fab type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\">\r\n                <mat-icon matSuffix>search</mat-icon>\r\n            </button>\r\n        </form>\r\n        <mat-slide-toggle class=\"pull-right\" color=\"primary\" [(ngModel)]=\"advancedQuery\">Busqueda Avanzada\r\n        </mat-slide-toggle>\r\n    </div>\r\n\r\n    <div class=\"container\" *ngIf=\"!advancedQuery\">\r\n        <mat-form-field class=\"full-width\" *ngIf=\"!advancedQuery\">\r\n            <input matInput placeholder=\"Buscar\" name=\"Buscar\" (keyup)=\"filterUsers()\" [(ngModel)]=\"query\">\r\n            <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n        <mat-slide-toggle class=\"pull-right\" color=\"primary\" [(ngModel)]=\"advancedQuery\">Busqueda Avanzada\r\n        </mat-slide-toggle>\r\n    </div>\r\n</div>\r\n\r\n<mat-tab-group>\r\n    <mat-tab label=\"Todo\">\r\n        <div *ngIf=\"!(isHandset$|async)\">\r\n            <app-users-list *ngIf=\"users != undefined\" [users]=\"users\" (reload)=\"loadUsers()\"\r\n                [displayedColumns]=\"['name', 'lastName', 'secondLastName', 'gender', 'documentationId', 'action']\"\r\n                [columnsNames]=\"['Nombre', 'Apellido', '2do Apellido', 'Género', 'DNI/Pasaporte', 'Action']\">\r\n            </app-users-list>\r\n        </div>\r\n        <div *ngIf=\"(isHandset$|async)\">\r\n            <app-users-list *ngIf=\"users != undefined\" [users]=\"users\" (reload)=\"loadUsers()\"\r\n                [displayedColumns]=\"['name', 'documentationId', 'action']\"\r\n                [columnsNames]=\"['Nombre', 'DNI/Pasaporte', 'Action']\">\r\n            </app-users-list>\r\n        </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Profesional\">\r\n        <div *ngIf=\"!(isHandset$|async)\">\r\n            <app-users-list *ngIf=\"professionals != undefined\" [users]=\"professionals\" (reload)=\"loadUsers()\"\r\n                [displayedColumns]=\"['name', 'lastName', 'secondLastName', 'type', 'gender', 'documentationId', 'noCollegiate', 'action']\"\r\n                [columnsNames]=\"['Nombre', 'Apellido', '2do Apellido', 'Tipo', 'Género', 'DNI/Pasaporte', 'No. Colegiado', 'Action']\">\r\n            </app-users-list>\r\n        </div>\r\n        <div *ngIf=\"(isHandset$|async)\">\r\n            <app-users-list *ngIf=\"professionals != undefined\" [users]=\"professionals\" (reload)=\"loadUsers()\"\r\n                [displayedColumns]=\"['name', 'documentationId', 'type', 'action']\"\r\n                [columnsNames]=\"['Nombre', 'DNI/Pasaporte', 'Tipo', 'Action']\">\r\n            </app-users-list>\r\n        </div>\r\n\r\n    </mat-tab>\r\n    <mat-tab label=\"Paciente\">\r\n        <div *ngIf=\"!(isHandset$|async)\">\r\n            <app-users-list *ngIf=\"patients != undefined\" [users]=\"patients\" (reload)=\"loadUsers()\"\r\n                [displayedColumns]=\"['name', 'lastName', 'secondLastName', 'NHC', 'gender', 'documentationId', 'action']\"\r\n                [columnsNames]=\"['Nombre', 'Apellido', '2do Apellido','NHC', 'Género', 'DNI/Pasaporte', 'Action']\">\r\n            </app-users-list>\r\n        </div>\r\n        <div *ngIf=\"(isHandset$|async)\">\r\n            <app-users-list *ngIf=\"patients != undefined\" [users]=\"patients\" (reload)=\"loadUsers()\"\r\n                [displayedColumns]=\"['name', 'documentationId', 'action']\"\r\n                [columnsNames]=\"['Nombre','DNI/Pasaporte', 'Action']\">\r\n            </app-users-list>\r\n        </div>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n<button mat-raised-button color=\"primary\" class=\"add\" routerLink=\"/user/new\">\r\n    <mat-icon>add</mat-icon>Nuevo Usuario\r\n</button>\r\n<button mat-raised-button color=\"warn\" class=\"delete\" (click)=\"deleteDoctors()\">\r\n    <mat-icon>delete</mat-icon>Eliminar Médicos\r\n</button>\r\n<div class=\"center\" *ngIf=\"users == undefined\">\r\n    <mat-spinner></mat-spinner>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}